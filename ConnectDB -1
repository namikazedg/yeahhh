package com.tamnt.day4;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Scanner;

public class ConnectDB {

	static final String URL = "jdbc:sqlserver://localhost;databasename=javabasic";
	static final String USER = "sa";
	static final String PW = "Thanhtam96";
	Connection con = null;
	Statement stmt = null;
	PreparedStatement pstmt = null;
	ResultSet rs = null;

	public Connection getConnect() {
		try {
			con = DriverManager.getConnection(URL, USER, PW);
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return con;
	}

	public void insertCandidate() {
		try {
			con = this.getConnect();
			con.setAutoCommit(false);
			pstmt = con.prepareStatement("insert into candidate values(?,?,?,?,?,?)");

			System.out.print("input candidate id: ");
			String candidateId = new Scanner(System.in).nextLine();
			System.out.print("input full name: ");
			String fullName = new Scanner(System.in).nextLine();
			boolean kt = true;
			Date birthday;
			do {
				System.out.print("input birthday: ");
				birthday = Date.valueOf(
						new SimpleDateFormat("yyyy-MM-dd").format(new java.util.Date(new Scanner(System.in).nextLine())));
				if(birthday.getYear()<0 || birthday.getYear()> new java.util.Date().getYear()){
					try {
						throw (new UserExceptionBirthday());
					} catch (UserExceptionBirthday e) {
						e.printStackTrace();
					}
				}else{
					kt = false;
				}
			} while (kt);
			
			
			
			System.out.print("input phone: ");
			String phone = new Scanner(System.in).nextLine();
			System.out.print("input email: ");
			String email = new Scanner(System.in).nextLine();
			System.out.print("input candidate type: ");
			int candidateType = new Scanner(System.in).nextInt();

			pstmt.setString(1, candidateId);
			pstmt.setString(2, fullName);
			pstmt.setDate(3, birthday);
			pstmt.setString(4, phone);
			pstmt.setString(5, email);
			pstmt.setInt(6, candidateType);
			pstmt.executeUpdate();

			if (candidateType == 0) {
				pstmt = con.prepareStatement("insert into Experience values(?,?,?)");
				System.out.print("input exp in year: ");
				int expInYear = new Scanner(System.in).nextInt();
				System.out.print("input pro skill: ");
				String proSkill = new Scanner(System.in).nextLine();

				pstmt.setString(1, candidateId);
				pstmt.setInt(2, expInYear);
				pstmt.setString(3, proSkill);
				pstmt.executeUpdate();
			} else if (candidateType == 1) {
				pstmt = con.prepareStatement("insert into Fresher values(?,?,?,?)");
				System.out.print("input graduation date: ");
				Date graduationDate = Date.valueOf(new SimpleDateFormat("yyyy-MM-dd")
						.format(new java.util.Date(new Scanner(System.in).nextLine())));
				System.out.print("input graduation rank:");
				String graduationRank = new Scanner(System.in).nextLine();
				System.out.print("input education: ");
				String education = new Scanner(System.in).nextLine();

				pstmt.setString(1, candidateId);
				pstmt.setDate(2, graduationDate);
				pstmt.setString(3, graduationRank);
				pstmt.setString(4, education);
				pstmt.executeUpdate();
			} else if (candidateType == 2) {
				pstmt = con.prepareStatement("insert into intern values(?,?,?,?)");
				System.out.print("input majors: ");
				String majors = new Scanner(System.in).nextLine();
				System.out.print("input semester: ");
				int semester = new Scanner(System.in).nextInt();
				System.out.print("input university name: ");
				String universityName = new Scanner(System.in).nextLine();

				pstmt.setString(4, candidateId);
				pstmt.setString(1, majors);
				pstmt.setInt(2, semester);
				pstmt.setString(3, universityName);
				pstmt.executeUpdate();
			} else {
				System.out.println("Candidate type nhập vào không đúng");
				System.exit(1);
			}

			System.out.print("input certificate number: ");
			int number = new Scanner(System.in).nextInt();
			for (int i = 0; i < number; i++) {
				System.out.println("Certificate " + (i + 1));
				System.out.print("input cerfiticate id: ");
				String certificateID = new Scanner(System.in).nextLine();
				System.out.print("input certificate name: ");
				String certificateName = new Scanner(System.in).nextLine();
				System.out.print("input certificate rank: ");
				String certificateRank = new Scanner(System.in).nextLine();
				System.out.print("input certificate date: ");
				Date certificateDate = Date.valueOf(new SimpleDateFormat("yyyy-MM-dd")
						.format(new java.util.Date(new Scanner(System.in).nextLine())));

				pstmt = con.prepareStatement("insert into certificate values(?,?,?,?,?)");
				pstmt.setString(1, candidateId);
				pstmt.setString(2, certificateID);
				pstmt.setString(3, certificateName);
				pstmt.setString(4, certificateRank);
				pstmt.setDate(5, certificateDate);
				pstmt.executeUpdate();
			}
			Candidate candidate = new Candidate();
			System.out.println("Insert thành công.");
			con.commit();
			con.setAutoCommit(true);
		} catch (SQLException e) {
			e.printStackTrace();
			try {
				con.rollback();
			} catch (SQLException e1) {
				e1.printStackTrace();
			}
		}

	}

	public void soLuongUngVien() {
		System.out.println("Có " + Candidate.candidateCount + " ứng viên vừa nhập.");
	}

	public static void main(String[] args) {

		do {
			ConnectDB connectDB = new ConnectDB();

			System.out.println("\n1. Nhập ứng viên.");
			System.out.println("2. Xem số lượng ứng viên vừa nhập.");
			System.out.println("Gõ exit để thoát.");

			String c = new Scanner(System.in).nextLine();
			switch (c) {
				case "1":
					connectDB.insertCandidate();
					break;
				case "2":
					connectDB.soLuongUngVien();
					break;
				case "exit":
					System.exit(1);
			}
		} while (true);
	}

}
